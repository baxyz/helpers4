name: "Validate Commits"
description: "Validate commit messages follow conventional commit format"

inputs:
  base-branch:
    description: "Base branch to compare against"
    required: false
    default: "main"

outputs:
  status:
    description: "Validation status (success/failure)"
    value: ${{ steps.validate.outputs.status }}

  invalid-count:
    description: "Number of invalid commits found"
    value: ${{ steps.validate.outputs.invalid-count }}

runs:
  using: "composite"
  steps:
    - name: Validate commit messages
      id: validate
      shell: bash
      run: |
        echo "Validating commit messages against conventional commit format..."

        # Get commits in this PR/branch
        if git rev-parse --verify origin/${{ inputs.base-branch }} >/dev/null 2>&1; then
          COMMITS=$(git log --oneline HEAD...origin/${{ inputs.base-branch }})
        else
          # Fallback if base branch doesn't exist
          COMMITS=$(git log --oneline -10)
        fi

        if [ -z "$COMMITS" ]; then
          echo "No commits to validate"
          echo "status=success" >> $GITHUB_OUTPUT
          echo "invalid-count=0" >> $GITHUB_OUTPUT
          exit 0
        fi

        INVALID_COUNT=0
        TOTAL_COUNT=0

        echo "Commits to validate:"
        echo "$COMMITS"
        echo ""

        while IFS= read -r commit; do
          if [ -z "$commit" ]; then
            continue
          fi
          
          COMMIT_MSG=$(echo "$commit" | cut -d' ' -f2-)
          TOTAL_COUNT=$((TOTAL_COUNT + 1))
          
          # Check conventional commit format
          # Format: type(scope): description
          # Types: feat, fix, docs, style, refactor, perf, test, chore, ci, build, revert
          if echo "$COMMIT_MSG" | grep -qE "^(feat|fix|docs|style|refactor|perf|test|chore|ci|build|revert)(\(.+\))?: .+"; then
            echo "‚úÖ Valid: $COMMIT_MSG"
          else
            echo "‚ùå Invalid: $COMMIT_MSG"
            echo "   Expected format: type(scope): description"
            echo "   Valid types: feat, fix, docs, style, refactor, perf, test, chore, ci, build, revert"
            INVALID_COUNT=$((INVALID_COUNT + 1))
          fi
        done <<< "$COMMITS"

        echo ""
        echo "Validation Summary:"
        echo "- Total commits: $TOTAL_COUNT"
        echo "- Valid commits: $((TOTAL_COUNT - INVALID_COUNT))"
        echo "- Invalid commits: $INVALID_COUNT"

        echo "invalid-count=$INVALID_COUNT" >> $GITHUB_OUTPUT

        if [ $INVALID_COUNT -eq 0 ]; then
          echo "status=success" >> $GITHUB_OUTPUT
          echo "üéâ All commits follow conventional commit format!"
        else
          echo "status=failure" >> $GITHUB_OUTPUT
          echo "üí• Some commits don't follow conventional commit format"
          echo ""
          echo "Please fix the commit messages or use 'git rebase -i' to edit them."
          echo "Learn more: https://www.conventionalcommits.org/"
          exit 1
        fi
